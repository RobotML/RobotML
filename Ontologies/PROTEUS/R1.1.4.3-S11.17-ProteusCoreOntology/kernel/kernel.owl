<?xml version="1.0"?>
<rdf:RDF
    xmlns:xsp="http://www.owl-ontologies.com/2005/08/07/xsp.owl#"
    xmlns:swrlb="http://www.w3.org/2003/11/swrlb#"
    xmlns:swrl="http://www.w3.org/2003/11/swrl#"
    xmlns:protege="http://protege.stanford.edu/plugins/owl/protege#"
    xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema#"
    xmlns:kern="http://www.anr-proteus.fr/sites/default/files/download/Ontology/kernel.owl#"
    xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
    xmlns:owl="http://www.w3.org/2002/07/owl#"
  xml:base="http://www.anr-proteus.fr/sites/default/files/download/Ontology/kernel.owl">
  <owl:Ontology rdf:about="">
    <rdfs:comment xml:lang="en">This work has been funded by the French Research agency ANR (Agence Nationale de la Recherche) through thePROTEUS project. It remains the property of the partners of the PROTEUS consortium but is governed by the CECILL B V1  licence (see http://www.cecill.info for information and the associated Licence_CeCILL-B_V1-en.txt or Licence_CeCILL-B_V1-fr.txt files).</rdfs:comment>
    <rdfs:comment xml:lang="en">The goal of the ontology is to help and support:
- the creation of specialised languages for robotics
- the creation of a standardised protocol dedicated to robots cooperation
- the creation of a standardised way to understand what is a simulation

It is organised in three logical parts. First part provides concepts to manipulate "systems", static as well as dynamic through:
- Static representation
-&gt; System
-&gt; Architecture
-&gt; Component
-&gt; Interaction
- Dynamic one
-&gt; Evolution model
-&gt; State
-&gt; derived in InteractionState and ComponentState

Second part is the representation of the physical world, of the universe of the problem. It includes:
- Environment
- PhysicalObject
- Hardware and Hardware{Aggregate|Component}
- PhysicalInteraction
- Referential

Third part is the representation of the software "world". All that concerns information and how it is mapped onto the hardware:
- Software and Software{Aggregate|Component}
- SoftwareConnector
- Computer
- SoftwareToHardwareInteraction and HardwareToSoftwareInteraction (These two are very important as they allow the software to live in the hardware)</rdfs:comment>
    <rdfs:comment xml:lang="en">from version 1.0, contributions are no more PROTEUS contributions.
authors are Jean-Loup Farges and Bruno Patin</rdfs:comment>
    <owl:versionInfo rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >version draft 2.0
- 30/023/2011: bpatin: addition of disjonctions at the highest  level</owl:versionInfo>
  </owl:Ontology>
  <owl:Class rdf:ID="Protocol">
    <owl:disjointWith>
      <owl:Class rdf:ID="Transition"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:ID="Frame"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:ID="System"/>
    </owl:disjointWith>
    <rdfs:comment xml:lang="en">A protocol is a convention on the way systems interact. It then constrains the information exchanges which implements an interaction.</rdfs:comment>
    <owl:disjointWith>
      <owl:Class rdf:ID="Probe"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:ID="Time"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:ID="Activity"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:ID="Interaction"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:ID="EvolutionModel"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:ID="Port"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:ID="Event"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:ID="Connector"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:ID="Information"/>
    </owl:disjointWith>
  </owl:Class>
  <owl:Class rdf:ID="Abstraction">
    <rdfs:subClassOf>
      <owl:Class rdf:about="#Information"/>
    </rdfs:subClassOf>
    <owl:disjointWith>
      <owl:Class rdf:ID="Data"/>
    </owl:disjointWith>
    <rdfs:comment xml:lang="en">Abstraction means that there is no representation associated to what is discussed.</rdfs:comment>
  </owl:Class>
  <owl:Class rdf:ID="FileSystem">
    <rdfs:comment xml:lang="en">A file system is a mean to organize data expected to be retained after a program terminates by providing procedures to store, retrieve and update data, as well as manage the available space on the device(s) which contain it. A file system organizes data in an efficient manner and is tuned to the specific characteristics of the device. There is usually a tight coupling between the operating system and the file system.</rdfs:comment>
    <owl:disjointWith>
      <owl:Class rdf:ID="Application"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:ID="AlgorithmicModule"/>
    </owl:disjointWith>
    <rdfs:subClassOf>
      <owl:Class rdf:ID="Software"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:ID="Model">
    <rdfs:subClassOf>
      <owl:Class rdf:about="#System"/>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty>
          <owl:ObjectProperty rdf:ID="models"/>
        </owl:onProperty>
        <owl:minCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >1</owl:minCardinality>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:comment xml:lang="en">Concept introduced in order to recognise when system is reality and when it is a model of this reality. It groups the Atomic and Composite Models.</rdfs:comment>
  </owl:Class>
  <owl:Class rdf:ID="FSMActivity">
    <rdfs:subClassOf>
      <owl:Class rdf:about="#Activity"/>
    </rdfs:subClassOf>
    <rdfs:comment xml:lang="en">A Finite State Machine Activity is an Activity linked to an AutomateState which is implemented by means of Algorithms.</rdfs:comment>
  </owl:Class>
  <owl:Class rdf:ID="DeterministicEvolutionModel">
    <rdfs:subClassOf>
      <owl:Class rdf:about="#EvolutionModel"/>
    </rdfs:subClassOf>
    <owl:disjointWith>
      <owl:Class rdf:ID="StochasticEvolutionModel"/>
    </owl:disjointWith>
    <rdfs:comment xml:lang="en">intrinsic property of any object to evolve through time without random phenomenon intervention which would affect the course of the evolution.</rdfs:comment>
  </owl:Class>
  <owl:Class rdf:ID="AutomataState">
    <rdfs:subClassOf>
      <owl:Class rdf:ID="State"/>
    </rdfs:subClassOf>
    <rdfs:comment xml:lang="en">The states of a Finite State Machine are a particular case of state</rdfs:comment>
  </owl:Class>
  <owl:Class rdf:ID="Clock">
    <rdfs:comment xml:lang="en">The timeframe of the world needs to be translated in something usable by other hardware. This the role of the clock concept.</rdfs:comment>
    <rdfs:subClassOf>
      <owl:Class rdf:ID="Hardware"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="#Interaction">
    <owl:disjointWith>
      <owl:Class rdf:about="#System"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#Event"/>
    </owl:disjointWith>
    <rdfs:comment xml:lang="en">abstract concept used to describe interactions between parts of an architecture. It is represented as a class because of the meta modeling approach and the fact that it will also support an evolution model.</rdfs:comment>
    <owl:disjointWith>
      <owl:Class rdf:about="#Time"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#Activity"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#Probe"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#Connector"/>
    </owl:disjointWith>
    <owl:disjointWith rdf:resource="#Protocol"/>
    <owl:disjointWith>
      <owl:Class rdf:about="#Port"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#Transition"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#Frame"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#EvolutionModel"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#Information"/>
    </owl:disjointWith>
  </owl:Class>
  <owl:Class rdf:about="#Frame">
    <owl:disjointWith>
      <owl:Class rdf:about="#Event"/>
    </owl:disjointWith>
    <owl:disjointWith rdf:resource="#Interaction"/>
    <owl:disjointWith>
      <owl:Class rdf:about="#Port"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#Time"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#Information"/>
    </owl:disjointWith>
    <rdfs:comment xml:lang="en">This class instantiates the abstract capability to link points in space. Space can be any dimension needed. This property can be constrained when the class is linked to others. As an example, physical object will use 3D coordinate systems using euclidean representation or 4D if using an einsteinen representation.
It is through this class that space will have an associated metric.
Attention must be focused on the fact there is an essential difference between the referential that expresses the fundamental property of object to be referenced and reference system that are the capability to manipulate referential (cartesian, circular, spherical, whatever). It means that there is only one referential associated to the environment and each of the physical objects it includes and there are many ways to manipulate them through reference systems.</rdfs:comment>
    <owl:disjointWith>
      <owl:Class rdf:about="#Activity"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#Transition"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#System"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#Probe"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#EvolutionModel"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#Connector"/>
    </owl:disjointWith>
    <owl:disjointWith rdf:resource="#Protocol"/>
  </owl:Class>
  <owl:Class rdf:ID="Wrapper">
    <rdfs:subClassOf>
      <owl:Class rdf:about="#Application"/>
    </rdfs:subClassOf>
    <owl:disjointWith>
      <owl:Class rdf:ID="Driver"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:ID="SoftwareProbe"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:ID="OperatingSystem"/>
    </owl:disjointWith>
    <rdfs:comment xml:lang="en">It is an “application” that allows another “application” to use  “External algorithmic modules”. Part of its ports are linked to the application using the module and part of them are link to the module used. The goal of this application is thus to translate the dataflow from one application to the other</rdfs:comment>
  </owl:Class>
  <owl:Class rdf:about="#Time">
    <owl:disjointWith rdf:resource="#Protocol"/>
    <owl:disjointWith>
      <owl:Class rdf:about="#Event"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#Port"/>
    </owl:disjointWith>
    <owl:disjointWith rdf:resource="#Interaction"/>
    <owl:disjointWith>
      <owl:Class rdf:about="#System"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#Transition"/>
    </owl:disjointWith>
    <owl:disjointWith rdf:resource="#Frame"/>
    <rdfs:comment xml:lang="en">Time here is the concept that allows to represent evolution. It is not said how it is represented but that it exists. It allows evolution model to have a meaning.</rdfs:comment>
    <owl:disjointWith>
      <owl:Class rdf:about="#Connector"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#Probe"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#Information"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#EvolutionModel"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#Activity"/>
    </owl:disjointWith>
  </owl:Class>
  <owl:Class rdf:ID="LogicalExpression">
    <owl:disjointWith>
      <owl:Class rdf:about="#State"/>
    </owl:disjointWith>
    <rdfs:comment xml:lang="en">Two or more arithmetic expressions connected by a relational operator indicating whether an expression is greater than, equal to, or less than the other, or connected by a logical variable, logical constant (true or false), or logical operator.</rdfs:comment>
    <rdfs:subClassOf>
      <owl:Class rdf:ID="Expression"/>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:ID="PhysicalObject">
    <rdfs:comment xml:lang="en">The Physical object is something that can be characterised through a border and considered as a whole with respect to the problem considered. As an example, a robot is an object when considering the mobile robotic problem. 
It exist in itself in the environment and is submitted to laws (called here Physical interactions) that govern every aspects of its life in the environment. As an exemple the dynamic law of movement.
A physical object, defining a border, can contain many other physical objects or no object. The decomposition is useful when the user needs to represent a frame supporting inside or at its surface other objects or when a robot is a multi part thing (articulated robot).</rdfs:comment>
    <rdfs:subClassOf>
      <owl:Class rdf:about="#System"/>
    </rdfs:subClassOf>
    <owl:disjointWith>
      <owl:Class rdf:about="#Software"/>
    </owl:disjointWith>
  </owl:Class>
  <owl:Class rdf:about="#Probe">
    <owl:disjointWith rdf:resource="#Frame"/>
    <owl:disjointWith>
      <owl:Class rdf:about="#Connector"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#Event"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#Transition"/>
    </owl:disjointWith>
    <owl:disjointWith rdf:resource="#Protocol"/>
    <owl:versionInfo rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >TODO: information and system are not disjoints from probe (error in proteus.owl)</owl:versionInfo>
    <owl:disjointWith rdf:resource="#Interaction"/>
    <owl:disjointWith>
      <owl:Class rdf:about="#Activity"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#Port"/>
    </owl:disjointWith>
    <rdfs:comment xml:lang="en">Probe is the concept that provides the capability to create information from the observation of states and thus of a system due to the fact systems have states.</rdfs:comment>
    <owl:disjointWith rdf:resource="#Time"/>
    <owl:disjointWith>
      <owl:Class rdf:about="#EvolutionModel"/>
    </owl:disjointWith>
  </owl:Class>
  <owl:Class rdf:ID="Condition">
    <rdfs:comment xml:lang="en">It is a logical expression composed by two statemens A, B called  antecedent (A) and consequent (B)  typically symbolized as A --&gt; B  (typically read "if A then B", "when A then B" or "A implies B").

A conditional expression is associated with an operation on two logical values, typically the values of two propositions, that produces a value of false just in case the first operand is true and the second operand is false.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#LogicalExpression"/>
  </owl:Class>
  <owl:Class rdf:about="#System">
    <owl:disjointWith>
      <owl:Class rdf:about="#Port"/>
    </owl:disjointWith>
    <owl:versionInfo rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >TODO:  information, EvolutionModel and probe are not disjoints from system (error in proteus.owl)</owl:versionInfo>
    <owl:disjointWith>
      <owl:Class rdf:about="#Connector"/>
    </owl:disjointWith>
    <owl:disjointWith rdf:resource="#Time"/>
    <rdfs:subClassOf>
      <rdf:Description rdf:about="http://www.w3.org/2002/07/owl#Thing">
        <rdfs:comment xml:lang="en">root of the whole PROTEUS ontology</rdfs:comment>
      </rdf:Description>
    </rdfs:subClassOf>
    <rdfs:comment xml:lang="en">The system class is an abstract representation of system. It allows the user to create drawings, schematic, etc, with boxes and links to maps after either on the hardware as well as on the software. Every system can be animated through an evolution model allowing it to have a trajectory.</rdfs:comment>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty>
          <owl:DatatypeProperty rdf:ID="isAtomic"/>
        </owl:onProperty>
        <owl:cardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >1</owl:cardinality>
      </owl:Restriction>
    </rdfs:subClassOf>
    <owl:disjointWith>
      <owl:Class rdf:about="#Event"/>
    </owl:disjointWith>
    <owl:disjointWith rdf:resource="#Frame"/>
    <owl:disjointWith>
      <owl:Class rdf:about="#Activity"/>
    </owl:disjointWith>
    <owl:disjointWith rdf:resource="#Protocol"/>
    <owl:disjointWith>
      <owl:Class rdf:about="#Transition"/>
    </owl:disjointWith>
    <owl:disjointWith rdf:resource="#Interaction"/>
  </owl:Class>
  <owl:Class rdf:ID="CompositeSystem">
    <rdfs:comment xml:lang="en">A composite system is an aggregate of systems</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#System"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty>
          <owl:DatatypeProperty rdf:about="#isAtomic"/>
        </owl:onProperty>
        <owl:hasValue rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
        >false</owl:hasValue>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:minCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >2</owl:minCardinality>
        <owl:onProperty>
          <owl:ObjectProperty rdf:ID="aggregates"/>
        </owl:onProperty>
      </owl:Restriction>
    </rdfs:subClassOf>
    <owl:disjointWith>
      <owl:Class rdf:ID="AtomicSystem"/>
    </owl:disjointWith>
  </owl:Class>
  <owl:Class rdf:about="#Data">
    <rdfs:subClassOf>
      <owl:Class rdf:about="#Information"/>
    </rdfs:subClassOf>
    <owl:disjointWith rdf:resource="#Abstraction"/>
    <rdfs:comment xml:lang="en">This type of information is directly interpretable by a machine, for example boolean, bits, etc.</rdfs:comment>
  </owl:Class>
  <owl:Class rdf:about="#Driver">
    <owl:disjointWith rdf:resource="#Wrapper"/>
    <owl:disjointWith>
      <owl:Class rdf:about="#SoftwareProbe"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#OperatingSystem"/>
    </owl:disjointWith>
    <rdfs:comment xml:lang="en">It is an application which controls the corresponding hardware. The DeviceSystem of a platform like a RoboticSystem, will be composed of theHardware components and the corresponding software driver components. The hardware considered must have some computing abilities in order to allow the driver to execute.</rdfs:comment>
    <rdfs:subClassOf>
      <owl:Class rdf:about="#Application"/>
    </rdfs:subClassOf>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:someValuesFrom>
          <owl:Class rdf:ID="DriverToHardwareInteraction"/>
        </owl:someValuesFrom>
        <owl:onProperty>
          <owl:ObjectProperty rdf:ID="triggers"/>
        </owl:onProperty>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="#AtomicSystem">
    <owl:disjointWith rdf:resource="#CompositeSystem"/>
    <rdfs:subClassOf rdf:resource="#System"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:hasValue rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
        >true</owl:hasValue>
        <owl:onProperty>
          <owl:DatatypeProperty rdf:about="#isAtomic"/>
        </owl:onProperty>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:comment xml:lang="en">An atomic system can't be split into parts.</rdfs:comment>
  </owl:Class>
  <owl:Class rdf:about="#Hardware">
    <rdfs:subClassOf rdf:resource="#PhysicalObject"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:someValuesFrom>
          <owl:Class rdf:ID="HardwareToDriverInteraction"/>
        </owl:someValuesFrom>
        <owl:onProperty>
          <owl:ObjectProperty rdf:about="#triggers"/>
        </owl:onProperty>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:comment xml:lang="en">The hardware characteritics is to be man made. It means that when built, from human perspective, it had a goal. Can be changed because of its use. Such a hardware is supposed to have computing abilities if it is associated to some software.</rdfs:comment>
    <owl:disjointWith>
      <owl:Class rdf:ID="Agent"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:ID="Environment"/>
    </owl:disjointWith>
  </owl:Class>
  <owl:Class rdf:about="#Application">
    <rdfs:subClassOf>
      <owl:Class rdf:about="#Software"/>
    </rdfs:subClassOf>
    <owl:disjointWith rdf:resource="#FileSystem"/>
    <owl:disjointWith>
      <owl:Class rdf:about="#AlgorithmicModule"/>
    </owl:disjointWith>
    <rdfs:comment xml:lang="en">It is a computing entity able to work upon a hardware that provides computing capcabilities.
It is a computing entity capable of providing life to another software. At the bottom level, it is the OS of the computer.</rdfs:comment>
  </owl:Class>
  <owl:Class rdf:ID="Action">
    <rdfs:subClassOf rdf:resource="#Interaction"/>
    <rdfs:comment xml:lang="en">An action is a specific kind of interaction. Actions are performed by agents that are either robots or humans. For robots, actions are performed on external world (Software to hardware interaction) or on internal components (Software to software interaction). For humans, actions are only physical interaction because the ontology does not describe psychology. Notice that it exists software to hardware interactions and software to software interactions that are not actions but only dataflow.</rdfs:comment>
    <owl:disjointWith>
      <owl:Class rdf:about="#DriverToHardwareInteraction"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#HardwareToDriverInteraction"/>
    </owl:disjointWith>
  </owl:Class>
  <owl:Class rdf:about="#Agent">
    <rdfs:subClassOf rdf:resource="#PhysicalObject"/>
    <rdfs:comment xml:lang="en">A physical entity which is capable of action, such as robots, animals, human.</rdfs:comment>
    <owl:disjointWith rdf:resource="#Hardware"/>
    <owl:disjointWith>
      <owl:Class rdf:about="#Environment"/>
    </owl:disjointWith>
  </owl:Class>
  <owl:Class rdf:ID="BiaisModel">
    <rdfs:comment xml:lang="en">Evolution Model that could be simulated by an algorithm that introduces a statistical distortion of the acquisition of the input data of the evolution process. This is a distortion because it is systematically different from the population parameter of interest. It can be caused by the selection process of the inputs or how these inputs were obtained.
Thus, the inputs of the different states would be different from a non-distortion scenario, so the evolution would correspond to a stochastic model.</rdfs:comment>
    <rdfs:subClassOf>
      <owl:Class rdf:ID="Algorithm"/>
    </rdfs:subClassOf>
    <owl:disjointWith>
      <owl:Class rdf:ID="NoiseModel"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:ID="StateMachine"/>
    </owl:disjointWith>
  </owl:Class>
  <owl:Class rdf:about="#Connector">
    <owl:disjointWith>
      <owl:Class rdf:about="#Activity"/>
    </owl:disjointWith>
    <owl:disjointWith rdf:resource="#System"/>
    <owl:disjointWith>
      <owl:Class rdf:about="#Information"/>
    </owl:disjointWith>
    <rdfs:comment xml:lang="en">A connector has a unique upstream port and a unique downstream port. It carries interactions.</rdfs:comment>
    <owl:disjointWith>
      <owl:Class rdf:about="#Transition"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#Event"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#Port"/>
    </owl:disjointWith>
    <owl:disjointWith rdf:resource="#Protocol"/>
    <owl:disjointWith rdf:resource="#Frame"/>
    <owl:disjointWith>
      <owl:Class rdf:about="#EvolutionModel"/>
    </owl:disjointWith>
    <owl:disjointWith rdf:resource="#Time"/>
    <owl:disjointWith rdf:resource="#Probe"/>
    <owl:disjointWith rdf:resource="#Interaction"/>
  </owl:Class>
  <owl:Class rdf:ID="Human">
    <rdfs:comment xml:lang="en">A human moves in waterbodies, over ground and over water surface (swiming). He or she pilots robots.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#AtomicSystem"/>
    <rdfs:subClassOf rdf:resource="#Agent"/>
  </owl:Class>
  <owl:Class rdf:ID="CompositeModel">
    <rdfs:subClassOf rdf:resource="#Model"/>
    <rdfs:subClassOf rdf:resource="#CompositeSystem"/>
    <rdfs:comment xml:lang="en">This concept groups the different theory that can be used to model one or more system. It is often linked to a mathematical theory. In the composite model case it is also often linked to architecture representation of this same system. E.g. the environment, reality of it, can be represented as the aggregation of terrain and buildings or it can be represented by the surface where only one system represent terrain AND buildings. As for any model (as is this ontology), the way to represent depends of its usage.
An atomic model being an atomic system is thus disjoint from a composite model as it is a composite system.</rdfs:comment>
    <owl:disjointWith>
      <owl:Class rdf:ID="AtomicModel"/>
    </owl:disjointWith>
  </owl:Class>
  <owl:Class rdf:about="#Transition">
    <owl:disjointWith>
      <owl:Class rdf:about="#Port"/>
    </owl:disjointWith>
    <rdfs:comment xml:lang="en">A transition is a part of the description of a finite state machine. It describes the possible transition between 2 states of a FSM. a transition is triggered by an event.</rdfs:comment>
    <owl:disjointWith>
      <owl:Class rdf:about="#Event"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#Information"/>
    </owl:disjointWith>
    <owl:disjointWith rdf:resource="#System"/>
    <owl:disjointWith rdf:resource="#Frame"/>
    <owl:disjointWith rdf:resource="#Time"/>
    <owl:disjointWith rdf:resource="#Probe"/>
    <owl:disjointWith>
      <owl:Class rdf:about="#Activity"/>
    </owl:disjointWith>
    <owl:disjointWith rdf:resource="#Interaction"/>
    <owl:disjointWith rdf:resource="#Protocol"/>
    <owl:disjointWith>
      <owl:Class rdf:about="#EvolutionModel"/>
    </owl:disjointWith>
    <owl:disjointWith rdf:resource="#Connector"/>
  </owl:Class>
  <owl:Class rdf:about="#Information">
    <owl:disjointWith>
      <owl:Class rdf:about="#Event"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#Activity"/>
    </owl:disjointWith>
    <rdfs:comment xml:lang="en">Sequence or set of symbols that record or transmit a message or the abstract meaning of an entity. Information can be classified in Data or Abstraction entities.</rdfs:comment>
    <owl:disjointWith rdf:resource="#Connector"/>
    <owl:disjointWith>
      <owl:Class rdf:about="#Port"/>
    </owl:disjointWith>
    <owl:versionInfo rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >TODO: probe and system are not disjoints from information (error in proteus.owl)</owl:versionInfo>
    <owl:disjointWith>
      <owl:Class rdf:about="#EvolutionModel"/>
    </owl:disjointWith>
    <owl:disjointWith rdf:resource="#Transition"/>
    <owl:disjointWith rdf:resource="#Protocol"/>
    <owl:disjointWith rdf:resource="#Time"/>
    <owl:disjointWith rdf:resource="#Frame"/>
    <owl:disjointWith rdf:resource="#Interaction"/>
  </owl:Class>
  <owl:Class rdf:about="#Activity">
    <owl:disjointWith rdf:resource="#Time"/>
    <owl:disjointWith rdf:resource="#Information"/>
    <owl:disjointWith rdf:resource="#Probe"/>
    <owl:disjointWith rdf:resource="#System"/>
    <owl:disjointWith rdf:resource="#Interaction"/>
    <owl:disjointWith>
      <owl:Class rdf:about="#Port"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#EvolutionModel"/>
    </owl:disjointWith>
    <owl:disjointWith rdf:resource="#Transition"/>
    <rdfs:comment xml:lang="en">An Activity is a set of Actions performed by an Agent.</rdfs:comment>
    <owl:disjointWith rdf:resource="#Connector"/>
    <owl:disjointWith>
      <owl:Class rdf:about="#Event"/>
    </owl:disjointWith>
    <owl:disjointWith rdf:resource="#Frame"/>
    <owl:disjointWith rdf:resource="#Protocol"/>
  </owl:Class>
  <owl:Class rdf:about="#Software">
    <rdfs:subClassOf rdf:resource="#System"/>
    <owl:disjointWith rdf:resource="#PhysicalObject"/>
    <rdfs:comment xml:lang="en">This type of system represents Software, it can be an application, a framework, a library or an object  file....To actually execute it must be associated to some hardware.</rdfs:comment>
  </owl:Class>
  <owl:Class rdf:ID="AutomataInitialState">
    <rdfs:comment xml:lang="en">Initial state of a Finite State Machine</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#AutomataState"/>
    <owl:disjointWith>
      <owl:Class rdf:ID="AutomataEndState"/>
    </owl:disjointWith>
  </owl:Class>
  <owl:Class>
    <owl:unionOf rdf:parseType="Collection">
      <owl:Class rdf:about="#Hardware"/>
      <owl:Class rdf:about="#Software"/>
    </owl:unionOf>
  </owl:Class>
  <owl:Class rdf:about="#DriverToHardwareInteraction">
    <rdfs:comment xml:lang="en">Interaction from Drivers (ActuatorDriver, CommunicationDriver, PowerDriver, SensorDriver) to their corresponding hardware(ActuatorHardware, CommunicationHardware, PowerHardware, SensorHardware).</rdfs:comment>
    <owl:disjointWith rdf:resource="#Action"/>
    <owl:disjointWith>
      <owl:Class rdf:about="#HardwareToDriverInteraction"/>
    </owl:disjointWith>
    <rdfs:subClassOf rdf:resource="#Interaction"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty>
          <owl:ObjectProperty rdf:ID="impacts"/>
        </owl:onProperty>
        <owl:allValuesFrom rdf:resource="#Hardware"/>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="#State">
    <owl:disjointWith rdf:resource="#LogicalExpression"/>
    <rdfs:subClassOf rdf:resource="#Abstraction"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty>
          <owl:ObjectProperty rdf:ID="hasStateVariables"/>
        </owl:onProperty>
        <owl:minCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >1</owl:minCardinality>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:comment xml:lang="en">The state expresses the fact that at some point in time (discrete or continuous expression of it), we will tag an object (interaction as well as component) and identify that it was as observed at this point. The fact that we need to "measure" values to identify the state of the object is of no concern here.</rdfs:comment>
  </owl:Class>
  <owl:Class rdf:about="#Algorithm">
    <rdfs:subClassOf>
      <owl:Class rdf:about="#EvolutionModel"/>
    </rdfs:subClassOf>
    <rdfs:comment xml:lang="en">Effective method/function (mathematical-logical) for solving a problem expressed as a sequence of instructions.</rdfs:comment>
  </owl:Class>
  <owl:Class rdf:about="#AlgorithmicModule">
    <rdfs:subClassOf rdf:resource="#Software"/>
    <owl:disjointWith rdf:resource="#Application"/>
    <owl:disjointWith rdf:resource="#FileSystem"/>
    <rdfs:comment xml:lang="en">It is an application that is not executable by itself but can be composed through tooling such as the PROTEUS main tool.</rdfs:comment>
  </owl:Class>
  <owl:Class rdf:about="#StateMachine">
    <rdfs:subClassOf rdf:resource="#Algorithm"/>
    <rdfs:comment xml:lang="en">A discrete type of a evolution model is a finite state machine (FSM). A FSM has a sfinet set of states, a finite set of transitions between these states, an initial state and an end state. Activities can be associated to states.</rdfs:comment>
    <owl:disjointWith rdf:resource="#BiaisModel"/>
    <owl:disjointWith>
      <owl:Class rdf:about="#NoiseModel"/>
    </owl:disjointWith>
  </owl:Class>
  <owl:Class>
    <owl:unionOf rdf:parseType="Collection">
      <owl:Class rdf:about="#Environment"/>
      <owl:Class rdf:about="#PhysicalObject"/>
    </owl:unionOf>
  </owl:Class>
  <owl:Class rdf:about="#SoftwareProbe">
    <owl:disjointWith rdf:resource="#Wrapper"/>
    <owl:disjointWith rdf:resource="#Driver"/>
    <owl:disjointWith>
      <owl:Class rdf:about="#OperatingSystem"/>
    </owl:disjointWith>
    <rdfs:comment xml:lang="en">The software probe is able to provide data and not only information on the specific automata states</rdfs:comment>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:allValuesFrom rdf:resource="#AutomataState"/>
        <owl:onProperty>
          <owl:ObjectProperty rdf:ID="observes"/>
        </owl:onProperty>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:subClassOf rdf:resource="#Application"/>
    <rdfs:subClassOf rdf:resource="#Probe"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:allValuesFrom rdf:resource="#Data"/>
        <owl:onProperty>
          <owl:ObjectProperty rdf:ID="produces"/>
        </owl:onProperty>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:Class rdf:about="#Port">
    <owl:disjointWith rdf:resource="#Information"/>
    <owl:disjointWith rdf:resource="#Transition"/>
    <rdfs:subClassOf rdf:resource="http://www.w3.org/2002/07/owl#Thing"/>
    <rdfs:comment xml:lang="en">"in" and/or "out" point of a componant, where data, events and so on pass through</rdfs:comment>
    <owl:disjointWith rdf:resource="#Connector"/>
    <owl:disjointWith>
      <owl:Class rdf:about="#Event"/>
    </owl:disjointWith>
    <owl:disjointWith>
      <owl:Class rdf:about="#EvolutionModel"/>
    </owl:disjointWith>
    <owl:disjointWith rdf:resource="#Protocol"/>
    <owl:disjointWith rdf:resource="#Time"/>
    <owl:disjointWith rdf:resource="#Activity"/>
    <owl:disjointWith rdf:resource="#Probe"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:maxCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >1</owl:maxCardinality>
        <owl:onProperty>
          <owl:DatatypeProperty rdf:ID="isIn_Out"/>
        </owl:onProperty>
      </owl:Restriction>
    </rdfs:subClassOf>
    <rdfs:comment xml:lang="fr">point d'entrée et/ou de sortie d'un composant, par où peuvent transiter des données, des événements, etc.</rdfs:comment>
    <owl:disjointWith rdf:resource="#Frame"/>
    <owl:disjointWith rdf:resource="#System"/>
    <owl:disjointWith rdf:resource="#Interaction"/>
  </owl:Class>
  <owl:Class rdf:about="#AutomataEndState">
    <rdfs:subClassOf rdf:resource="#AutomataState"/>
    <rdfs:comment xml:lang="en">End state of a Finite State Machine</rdfs:comment>
    <owl:disjointWith rdf:resource="#AutomataInitialState"/>
  </owl:Class>
  <owl:Class rdf:about="#EvolutionModel">
    <owl:disjointWith rdf:resource="#Port"/>
    <rdfs:subClassOf rdf:resource="http://www.w3.org/2002/07/owl#Thing"/>
    <owl:versionInfo rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >TODO: EvolutionModel not disjoint with System</owl:versionInfo>
    <owl:disjointWith>
      <owl:Class rdf:about="#Event"/>
    </owl:disjointWith>
    <owl:disjointWith rdf:resource="#Interaction"/>
    <rdfs:comment xml:lang="en">The evolution model is what allows interactions, components and missions to live through a state trajectory either in a discrete or in a continuous form depending on the type of law used. Here evolution model means the intrinsic property of any object to evolve through time.

An evolution model has some several inputs to process to achieve a state transition:
* InputState
* InputTime
* InputPort Value

Depending on the presence of noise or biais in the model, we can classify the EvolutionModel in:
* DeterministicEvolutionModel (without noise nor biais)
* StochasticEvolutionModel (with noiser or/and biais)</rdfs:comment>
    <owl:disjointWith rdf:resource="#Connector"/>
    <owl:disjointWith rdf:resource="#Transition"/>
    <owl:disjointWith rdf:resource="#Activity"/>
    <owl:disjointWith rdf:resource="#Time"/>
    <owl:disjointWith rdf:resource="#Protocol"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:onProperty>
          <owl:ObjectProperty rdf:ID="isAFunctionOfTime"/>
        </owl:onProperty>
        <owl:maxCardinality rdf:datatype="http://www.w3.org/2001/XMLSchema#int"
        >1</owl:maxCardinality>
      </owl:Restriction>
    </rdfs:subClassOf>
    <owl:disjointWith rdf:resource="#Frame"/>
    <owl:disjointWith rdf:resource="#Information"/>
    <owl:disjointWith rdf:resource="#Probe"/>
  </owl:Class>
  <owl:Class rdf:about="#StochasticEvolutionModel">
    <owl:disjointWith rdf:resource="#DeterministicEvolutionModel"/>
    <rdfs:comment xml:lang="en">intrinsic property of any object to evolve through time with some random phenomenon intervention which would affect the course of the evolution. The Noise Model and Biais Model would be considered as these random phenomenon that will be taken as inputs to determine the new transition in the stochastic evolution.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#EvolutionModel"/>
  </owl:Class>
  <owl:Class rdf:about="#Event">
    <owl:disjointWith rdf:resource="#EvolutionModel"/>
    <owl:disjointWith rdf:resource="#System"/>
    <owl:disjointWith rdf:resource="#Port"/>
    <owl:disjointWith rdf:resource="#Time"/>
    <owl:disjointWith rdf:resource="#Frame"/>
    <owl:disjointWith rdf:resource="#Connector"/>
    <owl:disjointWith rdf:resource="#Activity"/>
    <owl:disjointWith rdf:resource="#Protocol"/>
    <owl:disjointWith rdf:resource="#Probe"/>
    <owl:disjointWith rdf:resource="#Transition"/>
    <owl:disjointWith rdf:resource="#Interaction"/>
    <rdfs:comment xml:lang="en">Evaluation to Truth-value of the condition placed in an origin State which entails the corresponding transition to a destination State in a StateMachine.</rdfs:comment>
    <owl:disjointWith rdf:resource="#Information"/>
  </owl:Class>
  <owl:Class rdf:about="#Expression">
    <rdfs:comment xml:lang="en">All different types of mathematical and computer science expressions. Composition of symbols.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#Abstraction"/>
  </owl:Class>
  <owl:Class rdf:ID="InterAgentCommunication">
    <rdfs:comment xml:lang="en">For multi-robot and human-robot systems agents have to communicate in order to fulfill the mission.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#Interaction"/>
  </owl:Class>
  <owl:Class rdf:about="#NoiseModel">
    <owl:disjointWith rdf:resource="#BiaisModel"/>
    <owl:disjointWith rdf:resource="#StateMachine"/>
    <rdfs:comment xml:lang="en">Evolution Model that could be simulated by an algorithm that introduces entropy or some random distortion in the extrinsec or intrinsec data flow of a system or interaction. Thus, the inputs of the different states would be different from a non-distortion scenario, so the evolution would correspond to a stochastic model.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#Algorithm"/>
  </owl:Class>
  <owl:Class rdf:about="#Environment">
    <owl:disjointWith rdf:resource="#Agent"/>
    <owl:disjointWith rdf:resource="#Hardware"/>
    <rdfs:comment xml:lang="en">This environment groups everything that exist. Nothing is outside and everything lives in it. An alias for environment could be Universe or World in an ontologic meaning. This is the highest possible "container" for the physical objects to exist.
Considering the scenario to be represented using this concept it expresses also the boundary we imagine for the problem. As an example, for a mobile on ground robot there is no need to represent anything concerning water.

The difference between physical objects and THE environment is that the PhysicalInteraction are part only of the latter and propagated into it.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#PhysicalObject"/>
    <rdfs:subClassOf rdf:resource="#CompositeSystem"/>
  </owl:Class>
  <owl:Class rdf:about="#OperatingSystem">
    <owl:disjointWith rdf:resource="#Wrapper"/>
    <owl:disjointWith rdf:resource="#SoftwareProbe"/>
    <owl:disjointWith rdf:resource="#Driver"/>
    <rdfs:subClassOf rdf:resource="#Application"/>
    <rdfs:comment xml:lang="en">An operating system (OS) is a set of programs that manages computer hardware resources, and provides common services for application software and file management. The operating system is the most important type of system software in a computer system. Without an operating system, a user cannot run an application program on their computer, unless the application program is self booting.</rdfs:comment>
  </owl:Class>
  <owl:Class rdf:about="#AtomicModel">
    <owl:disjointWith rdf:resource="#CompositeModel"/>
    <rdfs:comment xml:lang="en">This concept groups the different theory that can be used to model one or more system. It is often linnked to a mathematical theory. It also defines the "external" model concept meaning that the model exist, is provided but is only known through its interface.
An atomic system can models more than one system. It explains whay the properties models has cardinality more than one.
An atomic model beiing an atomic system is thus disjoint from a composite model as it is a composite system.</rdfs:comment>
    <rdfs:subClassOf rdf:resource="#Model"/>
    <rdfs:subClassOf rdf:resource="#AtomicSystem"/>
  </owl:Class>
  <owl:Class rdf:about="#HardwareToDriverInteraction">
    <rdfs:comment xml:lang="en">Interaction from Hardware (ActuatorHardware, CommunicationHardware, PowerHardware, SensorHardware) to their corresponding Drivers (ActuatorDriver, CommunicationDriver, PowerDriver, SensorDriver)). For instance, return of information coming from the sensor hardware to be managed by the software part of the platform.</rdfs:comment>
    <owl:disjointWith rdf:resource="#Action"/>
    <owl:disjointWith rdf:resource="#DriverToHardwareInteraction"/>
    <rdfs:subClassOf rdf:resource="#Interaction"/>
    <rdfs:subClassOf>
      <owl:Restriction>
        <owl:allValuesFrom rdf:resource="#Driver"/>
        <owl:onProperty>
          <owl:ObjectProperty rdf:about="#impacts"/>
        </owl:onProperty>
      </owl:Restriction>
    </rdfs:subClassOf>
  </owl:Class>
  <owl:ObjectProperty rdf:about="#aggregates">
    <rdfs:domain rdf:resource="#CompositeSystem"/>
    <rdfs:comment xml:lang="en">aggregation is used in order to explains the system composition property</rdfs:comment>
    <rdfs:range rdf:resource="#System"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="constrains">
    <rdfs:domain rdf:resource="#Protocol"/>
    <rdfs:range rdf:resource="#Information"/>
    <rdfs:comment xml:lang="en">A protocol constrains the way information is exchanged between systems</rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="receives">
    <owl:inverseOf>
      <owl:ObjectProperty rdf:ID="isReceivedOn"/>
    </owl:inverseOf>
    <rdfs:comment xml:lang="en">Ports receive interactions</rdfs:comment>
    <rdfs:domain rdf:resource="#Port"/>
    <rdfs:range rdf:resource="#Interaction"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="isDefinedBy">
    <rdfs:comment xml:lang="en">A finite state machine is defined by a set of states, a set of transitions and events.</rdfs:comment>
    <rdfs:range>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <owl:Class rdf:about="#Transition"/>
          <owl:Class rdf:about="#AutomataState"/>
          <owl:Class rdf:about="#Event"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:range>
    <rdfs:domain rdf:resource="#StateMachine"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="definesSpaceTime">
    <rdfs:domain rdf:resource="#Frame"/>
    <owl:inverseOf>
      <owl:ObjectProperty rdf:ID="belongsTo"/>
    </owl:inverseOf>
    <rdfs:range rdf:resource="#Time"/>
    <rdfs:comment xml:lang="en">A referential defines a local time</rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="hasAction">
    <rdfs:comment xml:lang="en">An Activity is made by a set of Actions.</rdfs:comment>
    <rdfs:range rdf:resource="#Action"/>
    <rdfs:subPropertyOf>
      <owl:ObjectProperty rdf:ID="has"/>
    </rdfs:subPropertyOf>
    <rdfs:domain rdf:resource="#Activity"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="isComposedOf">
    <owl:versionInfo rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >TODO: verify that this property is not exactly the same as the has property</owl:versionInfo>
    <rdfs:comment xml:lang="en">Generic property grouping other ones specifying there is a composition</rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="startsFrom">
    <rdfs:range rdf:resource="#AutomataInitialState"/>
    <rdfs:comment xml:lang="en">A finite state machine has an initial state</rdfs:comment>
    <rdfs:domain rdf:resource="#StateMachine"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="executesOn">
    <rdfs:domain rdf:resource="#Software"/>
    <rdfs:range rdf:resource="#Hardware"/>
    <rdfs:comment xml:lang="en">This expresses the fact that there is no software running without a hardware supporting it.</rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="isImplementedWith">
    <rdfs:domain rdf:resource="#FSMActivity"/>
    <rdfs:comment xml:lang="en">An FSMActivity is implemented by an algorithm</rdfs:comment>
    <rdfs:range rdf:resource="#Algorithm"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="animates">
    <owl:inverseOf>
      <owl:ObjectProperty rdf:ID="isAnimatedByEvolutionModel"/>
    </owl:inverseOf>
    <rdfs:domain rdf:resource="#EvolutionModel"/>
    <rdfs:comment xml:lang="en">The evolution Model provides animation to dynamic entities like System and Interaction.</rdfs:comment>
    <rdfs:range>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <owl:Class rdf:about="#System"/>
          <owl:Class rdf:about="#Interaction"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:range>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="isCarriedBy">
    <rdfs:domain rdf:resource="#Interaction"/>
    <owl:inverseOf>
      <owl:ObjectProperty rdf:ID="carries"/>
    </owl:inverseOf>
    <rdfs:comment xml:lang="en">An interaction is carried by connectors.</rdfs:comment>
    <rdfs:range rdf:resource="#Connector"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="#isReceivedOn">
    <rdfs:domain rdf:resource="#Interaction"/>
    <owl:inverseOf rdf:resource="#receives"/>
    <rdfs:range rdf:resource="#Port"/>
    <rdfs:comment xml:lang="en">An interaction is received by a system through a port</rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="hasProbe">
    <rdfs:domain rdf:resource="#System"/>
    <owl:inverseOf>
      <owl:ObjectProperty rdf:ID="isProbeOf"/>
    </owl:inverseOf>
    <rdfs:subPropertyOf>
      <owl:ObjectProperty rdf:about="#has"/>
    </rdfs:subPropertyOf>
    <rdfs:range rdf:resource="#Probe"/>
    <rdfs:comment xml:lang="en">Systems can have probes to allow evolution model to survey the systems' states.</rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="#isProbeOf">
    <rdfs:comment xml:lang="en">This allow to know to which system is associated a probe</rdfs:comment>
    <rdfs:subPropertyOf>
      <owl:ObjectProperty rdf:ID="isPropertyOf"/>
    </rdfs:subPropertyOf>
    <owl:inverseOf rdf:resource="#hasProbe"/>
    <rdfs:domain rdf:resource="#Probe"/>
    <rdfs:range rdf:resource="#System"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="#has">
    <rdfs:comment xml:lang="en">Things have things.</rdfs:comment>
    <owl:inverseOf>
      <owl:ObjectProperty rdf:about="#isPropertyOf"/>
    </owl:inverseOf>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="isUpstreamPortOf">
    <rdfs:domain rdf:resource="#Port"/>
    <rdfs:comment xml:lang="en">A port has exiting connectors.</rdfs:comment>
    <owl:inverseOf>
      <owl:ObjectProperty rdf:ID="hasUpstreamPort"/>
    </owl:inverseOf>
    <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#InverseFunctionalProperty"/>
    <rdfs:subPropertyOf>
      <owl:ObjectProperty rdf:about="#isPropertyOf"/>
    </rdfs:subPropertyOf>
    <rdfs:range rdf:resource="#Connector"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="endsOn">
    <rdfs:domain rdf:resource="#StateMachine"/>
    <rdfs:comment xml:lang="en">A finite state machine has an end state</rdfs:comment>
    <rdfs:range rdf:resource="#AutomataEndState"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="#models">
    <rdfs:comment xml:lang="en">This propertty expresses the fact that a system can model another one. It is what we do when, considering reality or a first layer of reality, we model it. What is said here is that reality IS a system and that each time we want to represent it we use a system description to do just that.</rdfs:comment>
    <owl:inverseOf>
      <owl:ObjectProperty rdf:ID="isModelledBy"/>
    </owl:inverseOf>
    <rdfs:range rdf:resource="#System"/>
    <rdfs:domain rdf:resource="#System"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="hasProtocol">
    <rdfs:comment xml:lang="en">An interaction can implement a protocol</rdfs:comment>
    <rdfs:range rdf:resource="#Protocol"/>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <owl:Class rdf:about="#Interaction"/>
          <owl:Class rdf:about="#Port"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <rdfs:subPropertyOf rdf:resource="#has"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="hasAsOrigin">
    <rdfs:comment xml:lang="en">this link means that a referential has an origin.</rdfs:comment>
    <rdfs:range rdf:resource="#Information"/>
    <rdfs:domain rdf:resource="#Frame"/>
    <rdfs:subPropertyOf rdf:resource="#has"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="givesNextState">
    <rdfs:domain rdf:resource="#EvolutionModel"/>
    <rdfs:range rdf:resource="#State"/>
    <rdfs:comment xml:lang="en">The evolution model is able to provide the next state of a component using its previous known states and a time on which to evaluate the new state.</rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="hasPort">
    <owl:inverseOf>
      <owl:ObjectProperty rdf:ID="isPortOf"/>
    </owl:inverseOf>
    <rdfs:comment xml:lang="en">Property to qualify the fact that a systems have ports.</rdfs:comment>
    <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#InverseFunctionalProperty"/>
    <rdfs:range rdf:resource="#Port"/>
    <rdfs:subPropertyOf rdf:resource="#has"/>
    <rdfs:domain rdf:resource="#System"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="takesAsStochasticInput">
    <rdfs:domain rdf:resource="#StochasticEvolutionModel"/>
    <rdfs:range>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <owl:Class rdf:about="#NoiseModel"/>
          <owl:Class rdf:about="#BiaisModel"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:range>
    <rdfs:comment xml:lang="en">An evolution model which introduces distortion in the inputs (either in the information itself, either in the acquisition process of this information), obtains these inputs from a noise model or a biais model.</rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="isTheSupport">
    <rdfs:domain rdf:resource="#Port"/>
    <rdfs:range rdf:resource="#Interaction"/>
    <rdfs:comment xml:lang="en">Ports support the emission/reception of interactions</rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="hasPortValue">
    <rdfs:subPropertyOf rdf:resource="#has"/>
    <rdfs:comment xml:lang="en">Each port of a system has some data to receive or to send through interactions from or to other systems.</rdfs:comment>
    <rdfs:domain rdf:resource="#Port"/>
    <rdfs:range rdf:resource="#Data"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="hasFSMActivity">
    <rdfs:domain rdf:resource="#AutomataState"/>
    <rdfs:subPropertyOf rdf:resource="#has"/>
    <rdfs:comment xml:lang="en">A state can be associated to Finite State Machine Activities.</rdfs:comment>
    <rdfs:range rdf:resource="#FSMActivity"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="entail">
    <rdfs:domain rdf:resource="#Event"/>
    <rdfs:range rdf:resource="#Transition"/>
    <rdfs:comment xml:lang="en">A transition is triggered by an event after evaluation to truth-value of the established condition.</rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="hasDownstreamPort">
    <rdfs:subPropertyOf rdf:resource="#has"/>
    <rdfs:comment xml:lang="en">A connector has a unique downstream port.</rdfs:comment>
    <rdfs:range rdf:resource="#Port"/>
    <rdfs:domain rdf:resource="#Connector"/>
    <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
    <owl:inverseOf>
      <owl:ObjectProperty rdf:ID="isDownstreamPortOf"/>
    </owl:inverseOf>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="#impacts">
    <rdfs:range rdf:resource="#System"/>
    <rdfs:comment xml:lang="en">it is the interaction through its evolution model that will impact the component by changing / modifying its state. Three different interaction are linked to this one.</rdfs:comment>
    <rdfs:domain rdf:resource="#Interaction"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="uses">
    <rdfs:comment xml:lang="en">Systems needs information internally in order to work properly. At the most generic level, we do not need to know anything with respect to these internal information but in some cases this becomes an important point.</rdfs:comment>
    <rdfs:domain rdf:resource="#System"/>
    <owl:inverseOf>
      <owl:ObjectProperty rdf:ID="isUsedBy"/>
    </owl:inverseOf>
    <rdfs:subPropertyOf rdf:resource="#has"/>
    <rdfs:range rdf:resource="#Information"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="isEmittedOn">
    <rdfs:comment xml:lang="en">An interaction is emitted by a system through a port</rdfs:comment>
    <owl:inverseOf>
      <owl:ObjectProperty rdf:ID="emits"/>
    </owl:inverseOf>
    <rdfs:range rdf:resource="#Port"/>
    <rdfs:domain rdf:resource="#Interaction"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="#hasStateVariables">
    <rdfs:subPropertyOf rdf:resource="#has"/>
    <rdfs:range rdf:resource="#Data"/>
    <rdfs:comment xml:lang="en">The state vector has several components/state variables.</rdfs:comment>
    <rdfs:domain rdf:resource="#State"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="isPositionedIn">
    <rdfs:comment xml:lang="en">any physical object can be positioned at the very least in the environment referential. There is no meaning to position the object in its proper referential.</rdfs:comment>
    <owl:versionInfo xml:lang="en">The fact that the referential defined by the object can not be the referential it is positioned in is expressed by a SWRL rule in proteus.owl.</owl:versionInfo>
    <rdfs:range rdf:resource="#Frame"/>
    <rdfs:domain rdf:resource="#PhysicalObject"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="#isAFunctionOfTime">
    <rdfs:range rdf:resource="#Time"/>
    <rdfs:domain rdf:resource="#EvolutionModel"/>
    <rdfs:comment xml:lang="en">ad'hoc link that needs to be reworked as the evolution model is an abstract view on the way architectures can evolve and time is a property of a physical object that is no more an abstraction.</rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="from">
    <rdfs:range rdf:resource="#AutomataState"/>
    <rdfs:comment xml:lang="en">A transition is defined by a start state and an end state</rdfs:comment>
    <rdfs:domain rdf:resource="#Transition"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="wraps">
    <rdfs:comment xml:lang="en">This means that the wrapper translates the dataflow from / to the two linked objects</rdfs:comment>
    <rdfs:range rdf:resource="#Application"/>
    <rdfs:domain rdf:resource="#Wrapper"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="#isAnimatedByEvolutionModel">
    <owl:inverseOf rdf:resource="#animates"/>
    <rdfs:range rdf:resource="#EvolutionModel"/>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <owl:Class rdf:about="#Interaction"/>
          <owl:Class rdf:about="#System"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
    <rdfs:comment xml:lang="en">abstract property of interactions and components to live.</rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="#isPropertyOf">
    <rdfs:comment xml:lang="en">Things are properties of things.</rdfs:comment>
    <owl:inverseOf rdf:resource="#has"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="hasState">
    <rdfs:range rdf:resource="#State"/>
    <rdfs:subPropertyOf rdf:resource="#has"/>
    <rdfs:comment xml:lang="en">each class associated through this link to state is able to have a set of state. It does not mean evolution because this is implemented through the evolution model that will allow an ordering of the set.</rdfs:comment>
    <rdfs:domain>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <owl:Class rdf:about="#System"/>
          <owl:Class rdf:about="#Interaction"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:domain>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="to">
    <rdfs:comment xml:lang="en">A transition is defined by a start state and an end state</rdfs:comment>
    <rdfs:range rdf:resource="#AutomataState"/>
    <rdfs:domain rdf:resource="#Transition"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="#isPortOf">
    <rdfs:subPropertyOf rdf:resource="#isPropertyOf"/>
    <rdfs:comment xml:lang="en">Property to qualify the fact that a port belongs to one and only one system.</rdfs:comment>
    <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
    <rdfs:range rdf:resource="#System"/>
    <owl:inverseOf rdf:resource="#hasPort"/>
    <rdfs:domain rdf:resource="#Port"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="#observes">
    <rdfs:domain rdf:resource="#Probe"/>
    <rdfs:comment xml:lang="en">this property expresses the capability to extract information from a state.</rdfs:comment>
    <rdfs:range rdf:resource="#State"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="#isDownstreamPortOf">
    <rdfs:range rdf:resource="#Connector"/>
    <owl:inverseOf rdf:resource="#hasDownstreamPort"/>
    <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#InverseFunctionalProperty"/>
    <rdfs:subPropertyOf rdf:resource="#isPropertyOf"/>
    <rdfs:domain rdf:resource="#Port"/>
    <rdfs:comment xml:lang="en">A port has incoming connectors.</rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="isPerformedBy">
    <rdfs:range rdf:resource="#Agent"/>
    <rdfs:comment xml:lang="en">An action is necessarily carried out by an agent.</rdfs:comment>
    <rdfs:domain rdf:resource="#Action"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="takesAsInput">
    <rdfs:domain rdf:resource="#EvolutionModel"/>
    <rdfs:comment xml:lang="en">An evolution model has several inputs to process and evaluate which would be the corresponding evolution and destination state in a potential transition.

We can list the general inputs:
* InputState
* InputPort Value

Note that time dependency (InputTime) is taken into account through a specific relation: isAFunctionOfTime</rdfs:comment>
    <rdfs:range>
      <owl:Class>
        <owl:unionOf rdf:parseType="Collection">
          <owl:Class rdf:about="#State"/>
          <owl:Class rdf:about="#Port"/>
        </owl:unionOf>
      </owl:Class>
    </rdfs:range>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="#belongsTo">
    <rdfs:range rdf:resource="#Frame"/>
    <rdfs:comment xml:lang="en">This links is specific to the time class. It expresses the fact that the time concept means nothing outside the physical world and must be associated to at least one referential system.</rdfs:comment>
    <rdfs:domain rdf:resource="#Time"/>
    <owl:inverseOf rdf:resource="#definesSpaceTime"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="transmitInformation">
    <rdfs:comment xml:lang="en">An interaction allows transitting information.</rdfs:comment>
    <rdfs:domain rdf:resource="#Interaction"/>
    <rdfs:range rdf:resource="#Information"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="systemSource">
    <rdfs:range rdf:resource="#System"/>
    <rdfs:domain rdf:resource="#Interaction"/>
    <rdfs:comment xml:lang="en">This property allows the interaction to know which system triggered the interaction.</rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="hasActivity">
    <rdfs:domain rdf:resource="#Agent"/>
    <rdfs:comment xml:lang="en">An agent is linked to the Activity made by the actions performed by this agent.</rdfs:comment>
    <rdfs:range rdf:resource="#Activity"/>
    <rdfs:subPropertyOf rdf:resource="#has"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="Implements">
    <rdfs:domain rdf:resource="#Data"/>
    <rdfs:range rdf:resource="#Abstraction"/>
    <owl:inverseOf>
      <owl:ObjectProperty rdf:ID="isCodedIn"/>
    </owl:inverseOf>
    <rdfs:comment xml:lang="en">Every data corresponds to an abstraction</rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="#emits">
    <rdfs:range rdf:resource="#Interaction"/>
    <rdfs:comment xml:lang="en">Ports emit interactions</rdfs:comment>
    <rdfs:domain rdf:resource="#Port"/>
    <owl:inverseOf rdf:resource="#isEmittedOn"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="evaluatesToTruth">
    <rdfs:range rdf:resource="#Event"/>
    <rdfs:domain rdf:resource="#Condition"/>
    <rdfs:comment xml:lang="en">When a condition placed in a state of a StateMachine evaluates to truth value, and event takes place and carries out the transition to another state.</rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="managesFileSystem">
    <rdfs:range rdf:resource="#FileSystem"/>
    <rdfs:domain rdf:resource="#OperatingSystem"/>
    <rdfs:comment xml:lang="en">An operating system manages (update, write, read, ...) the file system and the information stored within.</rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="#isUsedBy">
    <rdfs:range rdf:resource="#System"/>
    <rdfs:subPropertyOf rdf:resource="#isPropertyOf"/>
    <owl:inverseOf rdf:resource="#uses"/>
    <rdfs:domain rdf:resource="#Information"/>
    <rdfs:comment xml:lang="en">Information can be used by System</rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="#hasUpstreamPort">
    <rdfs:domain rdf:resource="#Connector"/>
    <owl:inverseOf rdf:resource="#isUpstreamPortOf"/>
    <rdfs:range rdf:resource="#Port"/>
    <rdfs:subPropertyOf rdf:resource="#has"/>
    <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#FunctionalProperty"/>
    <rdfs:comment xml:lang="en">A connector has a unique upstraem port.</rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="isTriggeredBy">
    <rdfs:comment xml:lang="en">an event is triggered by a particular state. 
A warning here, in this ontology, this property is not linked to the "triggers" property.</rdfs:comment>
    <rdfs:domain rdf:resource="#Event"/>
    <rdfs:range rdf:resource="#State"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="#triggers">
    <rdfs:domain rdf:resource="#System"/>
    <rdfs:range rdf:resource="#Interaction"/>
    <rdfs:comment xml:lang="en">it is the property that will allow the interaction  through its evolution model to change the interaction state. Its inverse propert is the "impacts" one. A warning here is necessary as the "isTriggeredBy" IS NOT the inverse of the this property.</rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="#produces">
    <rdfs:range rdf:resource="#Information"/>
    <rdfs:domain rdf:resource="#Probe"/>
    <rdfs:comment xml:lang="en">probes produce information thanks to observation of States</rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="#carries">
    <rdfs:comment xml:lang="en">A connector carries interactions.</rdfs:comment>
    <rdfs:domain rdf:resource="#Connector"/>
    <rdfs:range rdf:resource="#Interaction"/>
    <owl:inverseOf rdf:resource="#isCarriedBy"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="#isCodedIn">
    <rdfs:range rdf:resource="#Data"/>
    <owl:inverseOf rdf:resource="#Implements"/>
    <rdfs:domain rdf:resource="#Abstraction"/>
    <rdfs:comment xml:lang="en">An abstraction is translated to be interpretable by a machine trough the Data concept.</rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:about="#isModelledBy">
    <rdfs:comment xml:lang="en">This property expresses the fact that there exists at least one system to model the system considered</rdfs:comment>
    <rdfs:range rdf:resource="#System"/>
    <rdfs:domain rdf:resource="#System"/>
    <owl:inverseOf rdf:resource="#models"/>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="evolvesIn">
    <rdfs:range rdf:resource="#PhysicalObject"/>
    <owl:versionInfo rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >TODO: clarify thsi property when evolution concern the surface of the object</owl:versionInfo>
    <rdfs:domain rdf:resource="#PhysicalObject"/>
    <rdfs:comment xml:lang="en">links the PhysicalObject to the physical object where it evolves. To be sure, there is a relationship between these two that is an inclusion one. Environment being the largest one at some step this inclusion story stops.</rdfs:comment>
  </owl:ObjectProperty>
  <owl:ObjectProperty rdf:ID="isDefinedIn">
    <rdfs:range rdf:resource="#Frame"/>
    <rdfs:domain rdf:resource="#Frame"/>
    <rdfs:comment xml:lang="en">This link means that you can relate any referential to any oher one. It is not functional because a referential may be defined in several referentials.</rdfs:comment>
    <owl:versionInfo rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >It is not functional.</owl:versionInfo>
  </owl:ObjectProperty>
  <rdf:Property rdf:ID="triggersInteractionWith"/>
  <owl:DatatypeProperty rdf:about="#isIn_Out">
    <rdfs:range>
      <owl:DataRange>
        <owl:oneOf rdf:parseType="Resource">
          <rdf:first rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
          >in</rdf:first>
          <rdf:rest rdf:parseType="Resource">
            <rdf:first rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
            >out</rdf:first>
            <rdf:rest rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
          </rdf:rest>
        </owl:oneOf>
      </owl:DataRange>
    </rdfs:range>
    <rdfs:comment xml:lang="en">indicates the port type in terms of "in" or "out" or  "in and out" (in-out value) port.</rdfs:comment>
    <rdfs:domain rdf:resource="#Port"/>
  </owl:DatatypeProperty>
  <owl:DatatypeProperty rdf:about="#isAtomic">
    <rdfs:comment xml:lang="en">A system is either atomic or composed. An atomic system do not aggregates other systems.</rdfs:comment>
    <rdfs:range>
      <owl:DataRange>
        <owl:oneOf rdf:parseType="Resource">
          <rdf:rest rdf:parseType="Resource">
            <rdf:rest rdf:resource="http://www.w3.org/1999/02/22-rdf-syntax-ns#nil"/>
            <rdf:first rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
            >false</rdf:first>
          </rdf:rest>
          <rdf:first rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean"
          >true</rdf:first>
        </owl:oneOf>
      </owl:DataRange>
    </rdfs:range>
    <rdfs:domain rdf:resource="#System"/>
  </owl:DatatypeProperty>
  <owl:FunctionalProperty rdf:ID="hasFrame">
    <rdfs:range rdf:resource="#Frame"/>
    <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/>
    <rdfs:comment xml:lang="en">The world / environment IS the frame in which everything will live.</rdfs:comment>
    <rdfs:domain rdf:resource="#Environment"/>
    <rdfs:subPropertyOf rdf:resource="#has"/>
  </owl:FunctionalProperty>
  <owl:FunctionalProperty rdf:ID="definesAFrame">
    <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/>
    <rdfs:range rdf:resource="#Frame"/>
    <rdfs:domain rdf:resource="#PhysicalObject"/>
    <rdfs:comment xml:lang="en">this property expresses the fact that every physical object is associated to a frame providing it its existence in space and time.</rdfs:comment>
  </owl:FunctionalProperty>
  <owl:FunctionalProperty rdf:ID="keepsTrackOfTime">
    <rdfs:domain rdf:resource="#Clock"/>
    <owl:versionInfo rdf:datatype="http://www.w3.org/2001/XMLSchema#string"
    >We do not organize the property under things like roboticians properties. Only one kind of viewpoint is modelled.</owl:versionInfo>
    <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/>
    <rdfs:range rdf:resource="#Time"/>
    <rdfs:comment xml:lang="en">This property expresses the fact that every hardware do need some way to provide a clock to its included software in order for it to live. This clock relies on the time of the physical object it lives in.</rdfs:comment>
  </owl:FunctionalProperty>
  <owl:FunctionalProperty rdf:ID="impactsEvolution">
    <rdfs:comment xml:lang="en">For instance, the evolution of a stone is not the same in the air and in the water</rdfs:comment>
    <rdfs:domain rdf:resource="#Environment"/>
    <rdf:type rdf:resource="http://www.w3.org/2002/07/owl#ObjectProperty"/>
    <rdfs:range rdf:resource="#PhysicalObject"/>
  </owl:FunctionalProperty>
</rdf:RDF>

<!-- Created with Protege (with OWL Plugin 3.4.8, Build 629)  http://protege.stanford.edu -->
